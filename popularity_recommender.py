# -*- coding: utf-8 -*-
"""Popularity_Recommender.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F4kTNv0GlIf8foZE6WAdrBmc91O8tQPP
"""

import pandas as pd
# Movies
url = "https://drive.google.com/file/d/1Ehe4rSQgFqZTioDmWT3gb0bmlVGByLkb/view?usp=sharing"
path = "https://drive.google.com/uc?export=download&id="+url.split("/")[-2]
movies = pd.read_csv(path)

# links
url = "https://drive.google.com/file/d/1ZFWHUL0eVtyTnGzUTD65VO3r_5Llau7p/view?usp=sharing"
path = "https://drive.google.com/uc?export=download&id="+url.split("/")[-2]
links = pd.read_csv(path)

# tags
url = "https://drive.google.com/file/d/1wR2eVSyTNX80wvIqmYwWYE1v30woNNSj/view?usp=sharing"
path = "https://drive.google.com/uc?export=download&id="+url.split("/")[-2]
tags = pd.read_csv(path)

# ratings
url = "https://drive.google.com/file/d/1E9h8UowaRrSfYP9lkV1H2atm_gdL4Hq7/view?usp=drive_link"
path = "https://drive.google.com/uc?export=download&id="+url.split("/")[-2]
ratings = pd.read_csv(path)



def popularity_based_recommender(n):
  movie_info_columns = ['movieId', 'title', 'genres']
  rating_count_df = ratings.groupby('movieId')['rating'].agg(['mean', 'count']).reset_index()
  from sklearn.preprocessing import MinMaxScaler
  scaler = MinMaxScaler(feature_range=(1, 5))
  rating_count_df['scaled_count'] = scaler.fit_transform(rating_count_df[['count']])
  rating_count_df['rank'] = (rating_count_df['mean'])+rating_count_df['scaled_count']

  df= (
   rating_count_df
   .drop_duplicates(subset='movieId')
   .merge(movies.drop_duplicates(subset='movieId'),
       on='movieId',
       how='left')
    [movie_info_columns + ["mean", "count", "rank"]]
    .nlargest(10, 'rank')
     )

  return df.head(10)

def chat_bot():
    print("Hi! I'm your personal recommender.")
    genre = int(input("choose your genre, 1 = Comedy 2= Drama  3= Thriller"))
    print("you have chosen", genre)
    df = popularity_based_recommender(10)
    if genre == 1:
      a = df[df["genres"].str.contains("Comedy")]
      print((a['title']).to_string(index=False))
    elif genre == 2:
      a = df[df["genres"].str.contains("Drama")]
      print((a['title']).to_string(index=False))
    elif genre == 3:
      a = df[df["genres"].str.contains("Thriller")]
      print((a['title']).to_string(index=False))
    else:
      print((a['title']).to_string(index=False))

chat_bot()